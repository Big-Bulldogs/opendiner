{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomra\\\\TRager\\\\opendiner\\\\client\\\\src\\\\components\\\\Test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TestComponent = () => {\n  _s();\n\n  const [number, setNumber] = useState(0);\n  const [employees, setEmployees] = usetState([]);\n\n  const handleClick = () => {\n    let newNumber = number + 1;\n    setNumber(newNumber);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      onClick: handleClick,\n      children: [\"count: \", number]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TestComponent, \"G5PFX1wnjBJODPcJAktOglW1raM=\");\n\n_c = TestComponent;\nexport default TestComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestComponent\");","map":{"version":3,"sources":["C:/Users/tomra/TRager/opendiner/client/src/components/Test.js"],"names":["React","useState","useEffect","TestComponent","number","setNumber","employees","setEmployees","usetState","handleClick","newNumber"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,aAAa,GAAE,MAAK;AAAA;;AAEtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BC,SAAS,CAAC,EAAD,CAA3C;;AAEA,QAAMC,WAAW,GAAE,MAAK;AACpB,QAAIC,SAAS,GAAGN,MAAM,GAAG,CAAzB;AACAC,IAAAA,SAAS,CAACK,SAAD,CAAT;AACH,GAHD;;AAKA,sBACI;AAAA,2BACI;AAAI,MAAA,OAAO,EAAED,WAAb;AAAA,4BAAkCL,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAfD;;GAAMD,a;;KAAAA,a;AAiBN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nconst TestComponent =()=> {\r\n\r\n    const [number, setNumber] = useState(0)\r\n    const [employees, setEmployees] = usetState([])\r\n\r\n    const handleClick =()=> {\r\n        let newNumber = number + 1\r\n        setNumber(newNumber)\r\n    }\r\n    \r\n    return (\r\n        <div>   \r\n            <h1 onClick={handleClick}>count: {number}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TestComponent"]},"metadata":{},"sourceType":"module"}