{"ast":null,"code":"import { forceUpdate } from 'react';\nimport API from '../../utils/API';\nexport const UPDATE = 'UPDATE';\nexport const SETLOCATION = \"SETLOCATION\";\nexport const HASLOADED = \"HASLOADED\";\nexport const update = res => {\n  return {\n    type: UPDATE,\n    value: res\n  };\n};\nexport const updateData = () => {\n  return dispatch => {\n    API.getRestaurants().then(res => {\n      console.log(res.data);\n      dispatch(update(res.data));\n    });\n  };\n};\nexport const setLocation = res => {\n  console.log(\"restaurant\", res); // forceUpdate();\n\n  return {\n    type: SETLOCATION,\n    value: res\n  };\n};\nexport const load = () => {\n  return {\n    type: HASLOADED\n  };\n};","map":{"version":3,"sources":["C:/Users/tomra/TRager/opendiner/client/src/store/actions/fetchRestaurants.js"],"names":["forceUpdate","API","UPDATE","SETLOCATION","HASLOADED","update","res","type","value","updateData","dispatch","getRestaurants","then","console","log","data","setLocation","load"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAO,MAAMC,MAAM,GAAG,QAAf;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,MAAM,GAAIC,GAAD,IAAS;AAC3B,SAAM;AACFC,IAAAA,IAAI,EAAEL,MADJ;AAEFM,IAAAA,KAAK,EAAEF;AAFL,GAAN;AAIH,CALM;AAOP,OAAO,MAAMG,UAAU,GAAG,MAAM;AAC5B,SAAOC,QAAQ,IAAI;AACfT,IAAAA,GAAG,CAACU,cAAJ,GACCC,IADD,CACMN,GAAG,IAAI;AACTO,MAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAACS,IAAhB;AACAL,MAAAA,QAAQ,CAACL,MAAM,CAACC,GAAG,CAACS,IAAL,CAAP,CAAR;AACH,KAJD;AAMH,GAPD;AAQH,CATM;AAWP,OAAO,MAAMC,WAAW,GAAIV,GAAD,IAAS;AAChCO,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BR,GAA1B,EADgC,CAEhC;;AACA,SAAM;AACFC,IAAAA,IAAI,EAAEJ,WADJ;AAEFK,IAAAA,KAAK,EAAEF;AAFL,GAAN;AAIH,CAPM;AASP,OAAO,MAAMW,IAAI,GAAE,MAAI;AACnB,SAAM;AACFV,IAAAA,IAAI,EAAEH;AADJ,GAAN;AAGH,CAJM","sourcesContent":["import { forceUpdate } from 'react';\nimport API from '../../utils/API'\nexport const UPDATE = 'UPDATE'\nexport const SETLOCATION = \"SETLOCATION\"\nexport const HASLOADED = \"HASLOADED\"\nexport const update = (res) => {\n    return{\n        type: UPDATE,\n        value: res\n    }\n}\n\nexport const updateData = () => {\n    return dispatch => {\n        API.getRestaurants()\n        .then(res => {\n            console.log(res.data)\n            dispatch(update(res.data))\n        })\n\n    }\n}\n\nexport const setLocation = (res) => {\n    console.log(\"restaurant\", res)\n    // forceUpdate();\n    return{\n        type: SETLOCATION,\n        value: res\n    } \n}\n\nexport const load =()=>{\n    return{\n        type: HASLOADED,\n    }\n}"]},"metadata":{},"sourceType":"module"}