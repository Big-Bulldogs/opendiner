{"ast":null,"code":"var _jsxFileName = \"/home/samuel/opendiner/client/src/pages/Reservation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Paper, Button, List, ListItem, TextField } from \"@material-ui/core\";\nimport DatePicker from \"react-datepicker\";\nimport API from \"../utils/API\";\nimport { connect } from \"react-redux\";\nimport { updateData } from \"../store/actions/fetchRestaurants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Reservation = props => {\n  _s();\n\n  const useStyles = makeStyles(theme => ({\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 250\n    },\n    header: {\n      marginRight: \"20px\"\n    }\n  })); // const currentTimeDate = Date.now();\n\n  const classes = useStyles();\n  const [reservations, setReservations] = useState([]);\n  const [startDate, setStartDate] = useState(\"\");\n  const [startTime, setStartTime] = useState(\"\");\n  const [user, setUser] = useState(\"\");\n  useEffect(() => {\n    API.getUserData().then(res => {\n      console.log(res.data);\n      setReservations(res.data.reservations);\n      setUser(res.data._id);\n    }).catch(err => console.log(err));\n  }, []);\n  console.log(user, reservations);\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    API.postReservation({\n      date: startDate,\n      time: startTime,\n      user: user,\n      restaurant: props.selectedLocation._id\n    }).then(res => {\n      console.log(res.data);\n    }).catch(err => console.log(err));\n  }\n\n  function handleInputChange(event) {\n    const {\n      value\n    } = event.target;\n    setStartTime(value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        className: classes.header,\n        children: [\"Reservation for \", props.selectedLocation.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.container,\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n          dateFormat: \"yyyy/MM/dd\",\n          selected: startDate,\n          onChange: date => setStartDate(date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Time\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          color: \"primary\",\n          variant: \"contained\",\n          size: \"small\",\n          onClick: handleFormSubmit,\n          children: [\"Schedule\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"h1\",\n      children: \"Reservation History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), reservations ? /*#__PURE__*/_jsxDEV(List, {\n      children: reservations.map(reservation => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: reservation.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"@\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: reservation.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 52\n        }, this)]\n      }, reservation._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"No Results to Display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Reservation, \"RN4N3Cf17aWjRCjMPtDOWglNG5Q=\", true);\n\n_c = Reservation;\n\nconst mapStateToProps = state => {\n  return {\n    restaurant: state.restaurant,\n    selectedLocation: state.selectedLocation\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onDataChange: () => dispatch(updateData())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Reservation);\n\nvar _c;\n\n$RefreshReg$(_c, \"Reservation\");","map":{"version":3,"sources":["/home/samuel/opendiner/client/src/pages/Reservation.js"],"names":["React","useState","useEffect","makeStyles","Typography","Paper","Button","List","ListItem","TextField","DatePicker","API","connect","updateData","Reservation","props","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","header","classes","reservations","setReservations","startDate","setStartDate","startTime","setStartTime","user","setUser","getUserData","then","res","console","log","data","_id","catch","err","handleFormSubmit","event","preventDefault","postReservation","date","time","restaurant","selectedLocation","handleInputChange","value","target","name","map","reservation","mapStateToProps","state","mapDispatchToProps","dispatch","onDataChange"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Paper, Button, List, ListItem, TextField } from \"@material-ui/core\";\nimport DatePicker from \"react-datepicker\";\nimport API from \"../utils/API\";\nimport { connect } from \"react-redux\";\nimport { updateData } from \"../store/actions/fetchRestaurants\";\n\nconst Reservation = (props) => {\n  const useStyles = makeStyles((theme) => ({\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 250,\n    },\n    header: {\n      marginRight: \"20px\",\n    },\n  }));\n\n  // const currentTimeDate = Date.now();\n  const classes = useStyles();\n\n  const [reservations, setReservations] = useState([]);\n  const [startDate, setStartDate] = useState(\"\");\n  const [startTime, setStartTime] = useState(\"\");\n  const [user, setUser]=useState(\"\");\n\n  useEffect(() => {\n    API.getUserData()\n      .then(res => {\n      console.log(res.data)\n       setReservations(res.data.reservations)\n       setUser(res.data._id)\n       \n      })\n      .catch((err) => console.log(err));\n  }, []);\n  console.log(user, reservations)\n  function handleFormSubmit(event) {\n    event.preventDefault();\n      API.postReservation({\n        date: startDate,\n        time: startTime,\n        user: user,\n        restaurant:props.selectedLocation._id\n      })\n        .then(res => {\n          console.log(res.data)\n        })\n        .catch((err) => console.log(err));\n    \n  }\n  function handleInputChange(event) {\n    const {value } = event.target;\n    setStartTime(value);\n  }\n\n  return (\n    <>\n      <Paper elevation={3}>\n        <Typography component=\"h1\" className={classes.header}>\n          Reservation for {props.selectedLocation.name}\n        </Typography>\n        <form className={classes.container} noValidate>\n          <DatePicker\n            dateFormat=\"yyyy/MM/dd\"\n            selected={startDate}\n            onChange={(date) => setStartDate(date)}\n          />\n          <TextField id=\"outlined-basic\" label=\"Time\" onChange={handleInputChange}></TextField>\n          <Button\n            type=\"submit\"\n            color=\"primary\"\n            variant=\"contained\"\n            size=\"small\"\n            onClick={handleFormSubmit}\n          >\n            Schedule{\" \"}\n          </Button>\n        </form>\n      </Paper>\n      <Typography component=\"h1\">Reservation History</Typography>\n      {reservations ? (\n        <List>\n          {reservations.map((reservation) => (\n            <ListItem key={reservation._id}>\n                <h3>{reservation.date}</h3><p>@</p><h3>{reservation.time}</h3>\n\n            </ListItem>\n          ))}\n        </List>\n      ) : (\n        <h3>No Results to Display</h3>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    restaurant: state.restaurant,\n    selectedLocation: state.selectedLocation,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onDataChange: () => dispatch(updateData()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Reservation);\n"]},"metadata":{},"sourceType":"module"}