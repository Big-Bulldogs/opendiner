{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomra\\\\TRager\\\\opendiner\\\\client\\\\src\\\\components\\\\Appcard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from \"react-redux\";\nimport { updateData } from \"../store/actions/fetchRestaurants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 750\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  }\n}));\n\nfunction RestaurantCard(props) {\n  _s();\n\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      avatar: /*#__PURE__*/_jsxDEV(RestaurantIcon, {\n        \"aria-label\": \"restaurant\",\n        className: classes.avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this),\n      action: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"settings\",\n        \"aria-controls\": \"simple-menu\",\n        \"aria-haspopup\": \"true\",\n        onClick: handleClick,\n        children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this),\n      title: props.selectedLocation.name,\n      subheader: props.selectedLocation.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      id: \"simple-menu\",\n      anchorEl: anchorEl,\n      keepMounted: true,\n      open: Boolean(anchorEl),\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleClose,\n        children: \"Make a Reservation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleClose,\n        children: \"Place an online order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n      className: classes.media,\n      image: \"\",\n      title: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        children: props.selectedLocation.phone_number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        children: props.selectedLocation.webpage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: props.hasLoaded === true ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.selectedLocation.hours.map(h => /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"p\",\n            children: h\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No hours to display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      disableSpacing: true,\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        className: clsx(classes.expand, {\n          [classes.expandOpen]: expanded\n        }),\n        onClick: handleExpandClick,\n        \"aria-expanded\": expanded,\n        \"aria-label\": \"show menu\",\n        children: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      in: expanded,\n      timeout: \"auto\",\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu\",\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: props.hasLoaded === true ? props.selectedLocation.menu ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: props.selectedLocation.menu.item.map(i => /*#__PURE__*/_jsxDEV(Typography, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: i.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: i.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: i.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" No menu items to display\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No menu items to display\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RestaurantCard, \"h4ZSQ0ae6nPGs2BiQgjY3xQWnvE=\", false, function () {\n  return [useStyles];\n});\n\n_c = RestaurantCard;\n\nconst mapStateToProps = state => {\n  return {\n    selectedLocation: state.selectedLocation,\n    restaurant: state.restaurant,\n    hasLoaded: state.hasLoaded\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onDataChange: () => dispatch(updateData())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RestaurantCard); // {props.selectedLocation.restaurant.hours.map(h=><Typography component=\"p\">h</Typography>)}\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantCard\");","map":{"version":3,"sources":["C:/Users/tomra/TRager/opendiner/client/src/components/Appcard.js"],"names":["React","useState","makeStyles","clsx","Card","CardHeader","CardMedia","CardContent","CardActions","Collapse","RestaurantIcon","IconButton","Typography","ExpandMoreIcon","MoreVertIcon","Menu","MenuItem","connect","updateData","useStyles","theme","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","RestaurantCard","props","classes","expanded","setExpanded","handleExpandClick","avatar","handleClick","selectedLocation","name","address","anchorEl","Boolean","handleClose","phone_number","webpage","hasLoaded","hours","map","h","menu","item","i","description","price","mapStateToProps","state","restaurant","mapDispatchToProps","dispatch","onDataChange"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport { connect } from \"react-redux\";\nimport { updateData } from \"../store/actions/fetchRestaurants\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 750,\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n}));\n\nfunction RestaurantCard(props) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <RestaurantIcon aria-label=\"restaurant\" className={classes.avatar}></RestaurantIcon>\n        }\n        action={\n          <IconButton aria-label=\"settings\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n            <MoreVertIcon />\n          </IconButton>\n        }\n        title={props.selectedLocation.name}\n        subheader={props.selectedLocation.address}\n      />\n      <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n              >\n        <MenuItem onClick={handleClose}>Make a Reservation</MenuItem>\n        <MenuItem onClick={handleClose}>Place an online order</MenuItem>\n      </Menu>\n      <CardMedia className={classes.media} image=\"\" title=\"\" />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.selectedLocation.phone_number}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.selectedLocation.webpage}\n        </Typography>\n        <Typography>\n          {props.hasLoaded === true ? (\n            <p>\n              {props.selectedLocation.hours.map((h) => (\n                <Typography component=\"p\">{h}</Typography>\n              ))}\n            </p>\n          ) : (\n            <p>No hours to display</p>\n          )}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show menu\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <div className=\"menu\">\n          <CardContent>\n            {props.hasLoaded === true ? (\n              props.selectedLocation.menu ? (\n                <p>\n                  {props.selectedLocation.menu.item.map((i) => (\n                    <Typography>\n                      <p>{i.name}</p>\n                      <p>{i.description}</p>\n                      <p>{i.price}</p>\n                    </Typography>\n                  ))}\n                </p>\n              ) : (\n                <p> No menu items to display</p>\n              )\n            ) : (\n              <p>No menu items to display</p>\n            )}\n          </CardContent>\n        </div>\n      </Collapse>\n    </Card>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedLocation: state.selectedLocation,\n    restaurant: state.restaurant,\n    hasLoaded: state.hasLoaded,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onDataChange: () => dispatch(updateData()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RestaurantCard);\n\n// {props.selectedLocation.restaurant.hours.map(h=><Typography component=\"p\">h</Typography>)}\n"]},"metadata":{},"sourceType":"module"}