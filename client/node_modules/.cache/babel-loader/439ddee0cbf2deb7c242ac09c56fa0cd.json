{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomra\\\\TRager\\\\opendiner\\\\client\\\\src\\\\components\\\\Appcard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { connect } from \"react-redux\";\nimport { updateData } from \"../store/actions/fetchRestaurants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LightTooltip = withStyles(theme => ({\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    color: 'rgba(0, 0, 0, 0.87)',\n    boxShadow: theme.shadows[1],\n    fontSize: 11\n  }\n}))(Tooltip);\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 500\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n}));\n\nfunction RestaurantCard(props) {\n  _s();\n\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        \"aria-label\": \"restaurant\",\n        className: classes.avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this),\n      action: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"settings\",\n        children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this),\n      title: props.selectedLocation.name,\n      subheader: props.selectedLocation.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n      className: classes.media,\n      image: \"\",\n      title: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        children: props.selectedLocation.phone_number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        children: props.selectedLocation.webpage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: props.hasLoaded === true ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.selectedLocation.hours.map(h => /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"p\",\n            children: h\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No hours to display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      disableSpacing: true,\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        className: clsx(classes.expand, {\n          [classes.expandOpen]: expanded\n        }),\n        onClick: handleExpandClick,\n        \"aria-expanded\": expanded,\n        \"aria-label\": \"show menu\",\n        children: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      in: expanded,\n      timeout: \"auto\",\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: props.hasLoaded === true ? props.selectedLocation.menu ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.selectedLocation.menu.item.map(i => /*#__PURE__*/_jsxDEV(Typography, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: i.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: i.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: i.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" No menu items to display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No menu items to display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RestaurantCard, \"h4ZSQ0ae6nPGs2BiQgjY3xQWnvE=\", false, function () {\n  return [useStyles];\n});\n\n_c = RestaurantCard;\n\nconst mapStateToProps = state => {\n  return {\n    selectedLocation: state.selectedLocation,\n    restaurant: state.restaurant,\n    hasLoaded: state.hasLoaded\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onDataChange: () => dispatch(updateData())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RestaurantCard); // {props.selectedLocation.restaurant.hours.map(h=><Typography component=\"p\">h</Typography>)}\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantCard\");","map":{"version":3,"sources":["C:/Users/tomra/TRager/opendiner/client/src/components/Appcard.js"],"names":["React","useState","makeStyles","withStyles","clsx","Card","Tooltip","CardHeader","CardMedia","CardContent","CardActions","Collapse","Avatar","IconButton","Typography","red","ExpandMoreIcon","MoreVertIcon","connect","updateData","LightTooltip","theme","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","fontSize","useStyles","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","RestaurantCard","props","classes","expanded","setExpanded","handleExpandClick","selectedLocation","name","address","phone_number","webpage","hasLoaded","hours","map","h","menu","item","i","description","price","mapStateToProps","state","restaurant","mapDispatchToProps","dispatch","onDataChange"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles,withStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\n\nimport { connect } from \"react-redux\";\nimport { updateData } from \"../store/actions/fetchRestaurants\";\n\nconst LightTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    color: 'rgba(0, 0, 0, 0.87)',\n    boxShadow: theme.shadows[1],\n    fontSize: 11,\n  },\n}))(Tooltip);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 500,\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nfunction RestaurantCard(props) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"restaurant\" className={classes.avatar}></Avatar>\n        }\n        action={\n          <IconButton aria-label=\"settings\">\n            <MoreVertIcon />\n          </IconButton>\n        }\n        title={props.selectedLocation.name}\n        subheader={props.selectedLocation.address}\n      />\n      <CardMedia className={classes.media} image=\"\" title=\"\" />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.selectedLocation.phone_number}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.selectedLocation.webpage}\n        </Typography>\n        <Typography>\n          {props.hasLoaded === true ? (\n            <p>\n              {props.selectedLocation.hours.map((h) => (\n                <Typography component=\"p\">{h}</Typography>\n              ))}\n            </p>\n          ) : (\n            <p>No hours to display</p>\n          )}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show menu\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          {(props.hasLoaded === true) ? (\n            (props.selectedLocation.menu) ? (\n            <p>\n              {props.selectedLocation.menu.item.map((i) => (\n                <Typography>\n                  <p>{i.name}</p>\n                  <p>{i.description}</p>\n                  <p>{i.price}</p>\n                </Typography>\n              ))}\n            </p>\n            ):(\n              <p> No menu items to display</p>\n             )\n          ) : (\n            <p>No menu items to display</p>\n          )}\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedLocation: state.selectedLocation,\n    restaurant: state.restaurant,\n    hasLoaded: state.hasLoaded,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onDataChange: () => dispatch(updateData()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RestaurantCard);\n\n// {props.selectedLocation.restaurant.hours.map(h=><Typography component=\"p\">h</Typography>)}\n"]},"metadata":{},"sourceType":"module"}