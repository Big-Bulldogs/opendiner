{"ast":null,"code":"var _jsxFileName = \"/home/samuel/opendiner/client/src/components/Map.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { connect } from 'react-redux';\nimport { getLocation } from '../store/actions/getLocation';\nimport Geocode from \"react-geocode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Map = props => {\n  _s();\n\n  const [lat, setLat] = useState(\"\");\n  const [lng, setLng] = useState(\"\");\n  Geocode.setApiKey(\"AIzaSyAxA1ecp0z2T9OVhmLP0e6GQZl24k3YLcc\");\n  Geocode.fromAddress(props.selectedLocation.address).then(res => {\n    const {\n      lat,\n      lng\n    } = res.results[0].geometry.location;\n    console.log(lat, lng);\n    setLat(lat);\n    setLng(lng);\n  }, error => {\n    console.error(error);\n  });\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [39.0997265, -94.5785667],\n    zoom: 4,\n    scrollWheelZoom: false,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      position: [lat, lng],\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [\"A pretty CSS3 popup. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 28\n        }, this), \" Easily customizable.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Map, \"TyX12l0iOBsYzQgIOXVTIJ/aNKM=\");\n\n_c = Map;\n\nconst mapStateToProps = state => {\n  return {\n    currentLocation: state.currentLocation,\n    selectedLocation: state.selectedLocation\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onGetLocation: () => dispatch(getLocation())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/home/samuel/opendiner/client/src/components/Map.js"],"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","connect","getLocation","Geocode","Map","props","lat","setLat","lng","setLng","setApiKey","fromAddress","selectedLocation","address","then","res","results","geometry","location","console","log","error","mapStateToProps","state","currentLocation","mapDispatchToProps","dispatch","onGetLocation"],"mappings":";;;AAAA,SAAQA,KAAR,EAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,eAAvD;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,8BAA1B;AACA,OAAOC,OAAP,MAAoB,eAApB;;;AACA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAAA;;AACrB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACY,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,CAAC,EAAD,CAA9B;AACAO,EAAAA,OAAO,CAACO,SAAR,CAAkB,yCAAlB;AACAP,EAAAA,OAAO,CAACQ,WAAR,CAAoBN,KAAK,CAACO,gBAAN,CAAuBC,OAA3C,EAAoDC,IAApD,CACGC,GAAD,IAAS;AACP,UAAM;AAAET,MAAAA,GAAF;AAAOE,MAAAA;AAAP,QAAeO,GAAG,CAACC,OAAJ,CAAY,CAAZ,EAAeC,QAAf,CAAwBC,QAA7C;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYd,GAAZ,EAAiBE,GAAjB;AACAD,IAAAA,MAAM,CAACD,GAAD,CAAN;AACAG,IAAAA,MAAM,CAACD,GAAD,CAAN;AACD,GANH,EAOGa,KAAD,IAAW;AACTF,IAAAA,OAAO,CAACE,KAAR,CAAcA,KAAd;AACD,GATH;AAWA,sBACE,QAAC,YAAD;AAAc,IAAA,MAAM,EAAE,CAAC,UAAD,EAAY,CAAC,UAAb,CAAtB;AAAgD,IAAA,IAAI,EAAE,CAAtD;AAAyD,IAAA,eAAe,EAAE,KAA1E;AAAA,4BACF,QAAC,SAAD;AACE,MAAA,WAAW,EAAC,0EADd;AAEE,MAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA,YADE,eAKF,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,CAACf,GAAD,EAAME,GAAN,CAAlB;AAAA,6BACE,QAAC,KAAD;AAAA,yDACuB;AAAA;AAAA;AAAA;AAAA,gBADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALE;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA5BD;;GAAMJ,G;;KAAAA,G;;AA8BN,MAAMkB,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,eAAe,EAAED,KAAK,CAACC,eADlB;AAELZ,IAAAA,gBAAgB,EAAEW,KAAK,CAACX;AAFnB,GAAP;AAID,CALD;;AAOA,MAAMa,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAM;AACJC,IAAAA,aAAa,EAAE,MAAMD,QAAQ,CAACxB,WAAW,EAAZ;AADzB,GAAN;AAGD,CAJD;;AAMA,eAAeD,OAAO,CAACqB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CrB,GAA7C,CAAf","sourcesContent":["import {React,useEffect, useState} from 'react'\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\nimport {connect} from 'react-redux'\nimport {getLocation} from '../store/actions/getLocation'\nimport Geocode from \"react-geocode\";\nconst Map = (props) => {\n  const [lat, setLat] = useState(\"\")\n  const [lng, setLng] = useState(\"\")\n  Geocode.setApiKey(\"AIzaSyAxA1ecp0z2T9OVhmLP0e6GQZl24k3YLcc\");\n  Geocode.fromAddress(props.selectedLocation.address).then(\n    (res) => {\n      const { lat, lng } = res.results[0].geometry.location;\n      console.log(lat, lng);\n      setLat(lat)\n      setLng(lng)\n    },\n    (error) => {\n      console.error(error);\n    }\n  );\n  return (\n    <MapContainer center={[39.0997265,-94.5785667]} zoom={4} scrollWheelZoom={false}>\n  <TileLayer\n    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n  />\n  <Marker position={[lat, lng]}>\n    <Popup>\n      A pretty CSS3 popup. <br /> Easily customizable.\n    </Popup>\n  </Marker>\n</MapContainer>\n)\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentLocation: state.currentLocation,\n    selectedLocation: state.selectedLocation\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return{\n    onGetLocation: () => dispatch(getLocation())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Map)"]},"metadata":{},"sourceType":"module"}