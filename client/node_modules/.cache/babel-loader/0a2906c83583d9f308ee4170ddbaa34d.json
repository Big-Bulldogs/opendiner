{"ast":null,"code":"var _jsxFileName = \"/home/samuel/opendiner/client/src/pages/OrderPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Paper, IconButton, List, ListItemText, TextField, ListItem, Avatar } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { updateData } from \"../store/actions/fetchRestaurants\";\nimport { setItems } from \"../store/actions/selectItems\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: 50,\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(1),\n      width: theme.spacing(50),\n      height: theme.spacing(50)\n    }\n  }\n}));\n\nfunction ListItemLink(props) {\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    button: true,\n    component: \"a\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n}\n\n_c = ListItemLink;\n\nconst OrderForm = props => {\n  _s();\n\n  const classes = useStyles();\n  console.log(props.selectedLocation);\n  console.log(props.hasLoaded);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        children: [\"Order from \", props.selectedLocation.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), props.hasLoaded === true ? props.selectedLocation.menu ? /*#__PURE__*/_jsxDEV(List, {\n        children: props.selectedLocation.menu.item.map(i => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(ListItemLink, {\n            onClick: item => props.setItems(i),\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: i.name,\n              secondary: i.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this)\n          }, i._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 19\n          }, this)\n        }, void 0, false))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No items to display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"no items to display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), props.hasLoaded === true ? props.selectedItems ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: props.selectedItems.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: props.selectedItems.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" No menu items to display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No menu items to display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrderForm, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = OrderForm;\n\nconst mapStateToProps = state => {\n  return {\n    restaurant: state.restaurant,\n    selectedLocation: state.selectedLocation,\n    hasLoaded: state.hasLoaded,\n    selectedItems: state.selectedItems\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onDataChange: () => dispatch(updateData()),\n    setItems: item => dispatch(setItems(item))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderForm);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ListItemLink\");\n$RefreshReg$(_c2, \"OrderForm\");","map":{"version":3,"sources":["/home/samuel/opendiner/client/src/pages/OrderPage.js"],"names":["React","useState","makeStyles","Typography","Paper","IconButton","List","ListItemText","TextField","ListItem","Avatar","connect","updateData","setItems","useStyles","theme","root","paddingTop","backgroundColor","palette","background","paper","display","flexWrap","margin","spacing","width","height","ListItemLink","props","OrderForm","classes","console","log","selectedLocation","hasLoaded","name","menu","item","map","i","price","_id","selectedItems","mapStateToProps","state","restaurant","mapDispatchToProps","dispatch","onDataChange"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Typography,\n  Paper,\n  IconButton,\n  List,\n  ListItemText,\n  TextField,\n  ListItem,\n  Avatar,\n} from \"@material-ui/core\";\n\nimport { connect } from \"react-redux\";\nimport { updateData } from \"../store/actions/fetchRestaurants\";\nimport {setItems} from \"../store/actions/selectItems\"\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: 50,\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(1),\n      width: theme.spacing(50),\n      height: theme.spacing(50),\n  },\n  }\n}));\n\nfunction ListItemLink(props) {\n  return <ListItem button component=\"a\" {...props} />;\n}\n\nconst OrderForm = (props) => {\n  const classes = useStyles();\n  \n  console.log(props.selectedLocation);\n  console.log(props.hasLoaded);\n\n  return (\n    <div className={classes.root}>\n      <Paper elevation={3}>\n        <Typography component=\"h1\">\n          Order from {props.selectedLocation.name}\n        </Typography>\n        {props.hasLoaded === true ? (\n          props.selectedLocation.menu ? (\n            <List>\n              {props.selectedLocation.menu.item.map((i) => (\n                <>\n                  <ListItemLink key={i._id} onClick={(item)=>props.setItems(i)}>\n                    <ListItemText primary={i.name} secondary={i.price} />\n                  </ListItemLink>\n                </>\n              ))}\n            </List>\n          ) : (\n            <p>No items to display</p>\n          )\n        ) : (\n          <p>no items to display</p>\n        )}\n      </Paper>\n      <Paper>\n        <Typography>Cart</Typography>\n        {props.hasLoaded === true ? (\n              props.selectedItems ? (\n                <p>\n                    <Typography>\n                      <p>{props.selectedItems.name}</p>\n                      <p>{props.selectedItems.price}</p>\n                    </Typography>\n                </p>\n              ) : (\n                <p> No menu items to display</p>\n              )\n            ) : (\n              <p>No menu items to display</p>\n            )}\n      </Paper>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    restaurant: state.restaurant,\n    selectedLocation: state.selectedLocation,\n    hasLoaded: state.hasLoaded,\n    selectedItems: state.selectedItems\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onDataChange: () => dispatch(updateData()),\n    setItems: (item)=>dispatch(setItems(item))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderForm);\n"]},"metadata":{},"sourceType":"module"}