{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomra\\\\TRager\\\\opendiner\\\\client\\\\src\\\\components\\\\Applist.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\nimport { connect } from 'react-redux';\nimport { updateData, setLocation } from '../store/actions/fetchRestaurants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nfunction ListItemLink(props) {\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    button: true,\n    component: \"a\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n}\n\n_c = ListItemLink;\n\nconst SimpleList = props => {\n  _s();\n\n  const classes = useStyles();\n  useEffect(() => props.onDataChange(), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(List, {\n      children: props.restaurants.map((r, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(ListItemLink, {\n          onClick: e => props.setLocation(r),\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: /*#__PURE__*/_jsxDEV(RestaurantIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: r.name,\n            secondary: r.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, r._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SimpleList, \"OAQf9SHEQQsOOZKjohcuI3tGtQ0=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = SimpleList;\n\nconst mapStateToProps = state => {\n  return {\n    restaurants: state.restaurants\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onDataChange: () => dispatch(updateData()),\n    setLocation: restaurant => dispatch(setLocation(restaurant)),\n    hasLoaded: () => dispatch(has)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SimpleList);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ListItemLink\");\n$RefreshReg$(_c2, \"SimpleList\");","map":{"version":3,"sources":["C:/Users/tomra/TRager/opendiner/client/src/components/Applist.js"],"names":["React","useEffect","makeStyles","List","ListItem","ListItemAvatar","ListItemText","Avatar","RestaurantIcon","connect","updateData","setLocation","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","ListItemLink","props","SimpleList","classes","onDataChange","restaurants","map","r","index","e","name","address","_id","mapStateToProps","state","mapDispatchToProps","dispatch","restaurant","hasLoaded","has"],"mappings":";;;AACA,SAAQA,KAAR,EAAeC,SAAf,QAA+B,OAA/B;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,EAAoBC,WAApB,QAAsC,mCAAtC;;;AAEA,MAAMC,SAAS,GAAGV,UAAU,CAAEW,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,QAAQ,EAAE,GAFN;AAGJC,IAAAA,eAAe,EAAEJ,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBC;AAHtC;AADiC,CAAZ,CAAD,CAA5B;;AAQA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,sBAAO,QAAC,QAAD;AAAU,IAAA,MAAM,MAAhB;AAAiB,IAAA,SAAS,EAAC,GAA3B;AAAA,OAAmCA;AAAnC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KAFQD,Y;;AAMT,MAAME,UAAU,GAAID,KAAD,IAAW;AAAA;;AAC1B,QAAME,OAAO,GAAGZ,SAAS,EAAzB;AAEAX,EAAAA,SAAS,CAAC,MAAMqB,KAAK,CAACG,YAAN,EAAP,EAA6B,EAA7B,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAED,OAAO,CAACV,IAAxB;AAAA,2BACI,QAAC,IAAD;AAAA,gBACKQ,KAAK,CAACI,WAAN,CAAkBC,GAAlB,CAAsB,CAACC,CAAD,EAAGC,KAAH,kBAC3B;AAAA,+BAEA,QAAC,YAAD;AAA2B,UAAA,OAAO,EAAGC,CAAD,IAAMR,KAAK,CAACX,WAAN,CAAkBiB,CAAlB,CAA1C;AAAA,kCACA,QAAC,cAAD;AAAA,mCACA,QAAC,MAAD;AAAA,qCACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBADA,eAMA,QAAC,YAAD;AAAc,YAAA,OAAO,EAAEA,CAAC,CAACG,IAAzB;AAA+B,YAAA,SAAS,EAAEH,CAAC,CAACI;AAA5C;AAAA;AAAA;AAAA;AAAA,kBANA;AAAA,WAAmBJ,CAAC,CAACK,GAArB;AAAA;AAAA;AAAA;AAAA;AAFA,uBADK;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CA7BD;;GAAMV,U;UACcX,S;;;MADdW,U;;AA+BN,MAAMW,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHT,IAAAA,WAAW,EAAES,KAAK,CAACT;AADhB,GAAP;AAGH,CAJD;;AAMA,MAAMU,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAM;AACFZ,IAAAA,YAAY,EAAE,MAAMY,QAAQ,CAAC3B,UAAU,EAAX,CAD1B;AAEFC,IAAAA,WAAW,EAAE2B,UAAD,IAAgBD,QAAQ,CAAC1B,WAAW,CAAC2B,UAAD,CAAZ,CAFlC;AAGFC,IAAAA,SAAS,EAAC,MAAIF,QAAQ,CAACG,GAAD;AAHpB,GAAN;AAKH,CAND;;AAOA,eAAe/B,OAAO,CAACyB,eAAD,EAAkBE,kBAAlB,CAAP,CAA8Cb,UAA9C,CAAf","sourcesContent":["\nimport {React, useEffect} from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\nimport {connect} from 'react-redux'\nimport {updateData, setLocation} from '../store/actions/fetchRestaurants'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nfunction ListItemLink(props) {\n  return <ListItem button component=\"a\" {...props} />;\n}\n\n\n\nconst SimpleList = (props) => {\n    const classes = useStyles();\n\n    useEffect(() => props.onDataChange(), [])\n  \n\n   \n    return (\n        <div className={classes.root}>\n            <List>\n                {props.restaurants.map((r,index) => (\n            <>\n          \n            <ListItemLink key={r._id}  onClick={(e)=> props.setLocation(r)} >\n            <ListItemAvatar>\n            <Avatar>\n              <RestaurantIcon />\n            </Avatar>\n          </ListItemAvatar>\n            <ListItemText primary={r.name} secondary={r.address} />\n\n            </ListItemLink>\n            </>\n                ))}\n            \n                \n            </List>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        restaurants: state.restaurants\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        onDataChange: () => dispatch(updateData()),\n        setLocation:(restaurant) => dispatch(setLocation(restaurant)),\n        hasLoaded:()=>dispatch(has)\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps) (SimpleList)\n"]},"metadata":{},"sourceType":"module"}